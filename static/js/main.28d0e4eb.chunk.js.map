{"version":3,"sources":["Components/Header.jsx","Components/Pagination.jsx","Components/Name.jsx","Components/Color.js","Components/Multiplier.jsx","Components/PokeDetails.jsx","Components/Card.jsx","Components/PokeGrid.jsx","Components/Footer.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Pagination","pagination","fetchDetails","setPokemon","onClick","prev","next","Name","details","name","id","description","height","weight","ability","colours","normal","fire","water","electric","grass","ice","fighting","poison","ground","flying","psychic","bug","rock","ghost","dragon","dark","steel","fairy","Multiplier","types","map","type","index","style","backgroundColor","multiplier","double_damage_from","double_damage","double_damage_to","PokeDetails","match","useState","setDetails","params","useEffect","a","fetch","res","json","url","typeDetails","typejson","species","flavourTextDetails","flavourText","info","sprites","abilities","damage_relations","flavor_text_entries","flavor_text","console","log","src","other","dream_world","front_default","alt","Card","props","imgSrc","number","slot","PokeGrid","pokemons","pokemon","to","Footer","href","App","setPagination","results","element","previous","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28d0e4eb.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>Pokedex</h1>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\n\r\nconst Pagination = ({pagination, fetchDetails, setPokemon}) => {\r\n  return (\r\n    <div className=\"pagination\">\r\n        <button\r\n          className=\"load\"\r\n          onClick={() => {\r\n            if (pagination.prev === null) return;\r\n            setPokemon([]);\r\n            fetchDetails(pagination.prev);\r\n          }}\r\n        >\r\n          Previous\r\n        </button>\r\n        <button\r\n          className=\"load\"\r\n          onClick={() => {\r\n            setPokemon([]);\r\n            fetchDetails(pagination.next);\r\n          }}\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Pagination;","import React from \"react\";\r\n\r\nconst Name = ({ details }) => {\r\n  return (\r\n    <div className=\"name-details\">\r\n      <h2>\r\n        {details?.name} #{details.id}\r\n      </h2>\r\n      <p>{details.description}</p>\r\n      <div className=\"info\">\r\n        Height <strong>{details.height / 10}m</strong> &nbsp; Weight{\" \"}\r\n        <strong>{details.weight / 10}kg</strong> <br /> Ability{\" \"}\r\n        <strong>{details.ability}</strong>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Name;\r\n","const colours = {\r\n  normal: '#A8A77A',\r\n  fire: '#EE8130',\r\n  water: '#6390F0',\r\n  electric: '#F7D02C',\r\n  grass: '#7AC74C',\r\n  ice: '#96D9D6',\r\n  fighting: '#C22E28',\r\n  poison: '#A33EA1',\r\n  ground: '#E2BF65',\r\n  flying: '#A98FF3',\r\n  psychic: '#F95587',\r\n  bug: '#A6B91A',\r\n  rock: '#B6A136',\r\n  ghost: '#735797',\r\n  dragon: '#6F35FC',\r\n  dark: '#705746',\r\n  steel: '#B7B7CE',\r\n  fairy: '#D685AD',\r\n};\r\n\r\nexport default colours;","import React from \"react\";\r\nimport colours from \"./Color\";\r\n\r\nconst Multiplier = ({details}) => {\r\n  return (\r\n    <div className=\"type-weak-strength\">\r\n      <div className=\"multiplier\">\r\n        <h4>Type</h4>\r\n        {details?.types?.map((type, index) => (\r\n          <span\r\n            className=\"type\"\r\n            style={{ backgroundColor: colours[type.type.name] }}\r\n            key={index}\r\n          >\r\n            {type.type.name}\r\n          </span>\r\n        ))}\r\n      </div>\r\n      <div className=\"multiplier\">\r\n        <h4>Weakness</h4>\r\n        {details.multiplier?.double_damage_from?.map((double_damage, index) => {\r\n          return (\r\n            <span\r\n              className=\"type\"\r\n              key={index}\r\n              style={{ backgroundColor: colours[double_damage.name] }}\r\n            >\r\n              {double_damage.name}\r\n            </span>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"multiplier\">\r\n        <h4>Strength</h4>\r\n        {details.multiplier?.double_damage_to?.map((double_damage, index) => {\r\n          return (\r\n            <span\r\n              className=\"type\"\r\n              key={index}\r\n              style={{ backgroundColor: colours[double_damage.name] }}\r\n            >\r\n              {double_damage.name}\r\n            </span>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Multiplier;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Name from \"./Name\";\r\nimport Multiplier from \"./Multiplier\";\r\n\r\nconst PokeDetails = ({ match }) => {\r\n  const [details, setDetails] = useState({});\r\n  const name = match.params.name;\r\n  useEffect(() => {\r\n    const fetchDetails = async () => {\r\n      try {\r\n        const res = await fetch(`https://pokeapi.co/api/v2/pokemon/${name}`);\r\n        const json = await res.json();\r\n        const typeDetails = await fetch(json.types[0].type.url);\r\n        const typejson = await typeDetails.json();\r\n        const flavourTextDetails = await fetch(json.species.url);\r\n        const flavourText = await flavourTextDetails.json();\r\n        let info = {\r\n          sprites: json.sprites,\r\n          name: json.name,\r\n          id: json.id,\r\n          height: json.height,\r\n          weight: json.weight,\r\n          types: json.types,\r\n          ability: json.abilities[0].ability.name,\r\n          multiplier: typejson.damage_relations,\r\n          description: flavourText.flavor_text_entries[0].flavor_text,\r\n        };\r\n        setDetails({ ...info });\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }; fetchDetails();\r\n  }, [name]);\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"bg-div\">\r\n      <div className=\"main-div\">\r\n        <div className=\"img-name-details\">\r\n          <img\r\n            src={details?.sprites?.other?.dream_world?.front_default}\r\n            alt=\"\"\r\n          />\r\n          <Name details={details} />\r\n        </div>\r\n        <Multiplier details={details} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokeDetails;\r\n","import React from \"react\";\r\nimport colours from './Color';\r\n\r\nconst Card = (props) => {\r\n\r\n  return (\r\n    <div className=\"pokemon-card\">\r\n      <img src={props.imgSrc} alt=\"\" />\r\n      <span className=\"number\">#{props.number}</span>\r\n      <h4 className=\"pokemon-name\">{props.name}</h4>\r\n      <div className=\"type-div\">\r\n        {props.types.map((type) => (\r\n          <span className=\"type\" key={type.slot} style={{backgroundColor: colours[type.type.name]}}>{type.type.name}</span>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react'\r\nimport Card from './Card'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst PokeGrid = ({pokemons}) => {\r\n  return (\r\n    <div className=\"pokemon-grid\">\r\n            {/* <Route path=\"/\"/> */}\r\n            {pokemons.map((pokemon) => {\r\n              return (\r\n                <Link to={`/${pokemon.name}`} key={pokemon.number} className=\"Link\">\r\n                  <Card\r\n                    key={pokemon.number}\r\n                    imgSrc={pokemon.imgSrc}\r\n                    name={pokemon.name}\r\n                    number={pokemon.number}\r\n                    types={pokemon.types}\r\n                  />\r\n                </Link>\r\n              );\r\n            })}\r\n          </div>\r\n  )\r\n}\r\n\r\n\r\nexport default PokeGrid","import React from 'react'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer id=\"footer\">\r\n      Created by <a href=\"https://www.github.com/jarihant701\">Arihant Jain</a>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route, Switch, Link } from \"react-router-dom\";\nimport Header from \"./Components/Header\";\nimport Pagination from \"./Components/Pagination\";\nimport PokeDetails from \"./Components/PokeDetails\";\nimport PokeGrid from \"./Components/PokeGrid\";\nimport Footer from './Components/Footer'\nimport \"./App.css\";\n\nconst App = () => {\n  const [pokemons, setPokemon] = useState([]);\n  const [pagination, setPagination] = useState({});\n\n  useEffect(() => {\n    fetchDetails(\"https://pokeapi.co/api/v2/pokemon/\");\n  }, []);\n\n  async function fetchDetails(url) {\n    const res = await fetch(url);\n    const json = await res.json();\n    json.results.map(async (element) => {\n      const res = await fetch(element.url);\n      const json = await res.json();\n      let next = {\n        number: json.id,\n        name: json.name,\n        imgSrc: json.sprites.other.dream_world.front_default,\n        types: json.types,\n      };\n      setPokemon((prev) => [ ...prev, next]);\n    });\n\n    setPagination({\n      prev: json.previous,\n      next: json.next,\n    });\n  }\n\n  return (\n    <BrowserRouter>\n      <Link to=\"/\" className=\"Link\">\n        <Header />\n      </Link>\n      <Switch>\n        <Route path=\"/\" exact>\n          <PokeGrid pokemons={pokemons} />\n          <Pagination\n            fetchDetails={fetchDetails}\n            pagination={pagination}\n            setPokemon={setPokemon}\n          />\n        </Route>\n        <Route path=\"/:name\" exact component={PokeDetails} />\n      </Switch>\n      <Footer />\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}